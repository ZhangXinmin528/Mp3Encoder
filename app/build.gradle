plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.zxm.mp3encoder'
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        applicationId "com.zxm.mp3encoder"
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        resValue "string", "build_time", buildTime()
        resValue "string", "build_host", hostName()
        resValue "string", "build_revision", revision()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main{
            jniLibs.srcDirs   'src/main/libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "androidx.core:core-ktx:$rootProject.ext.coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.appcompatVersion"
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"

    implementation "androidx.activity:activity-ktx:$rootProject.ext.activityKtxVersion"
    implementation "androidx.fragment:fragment:$rootProject.ext.fragmentVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.ext.fragmentVersion"

    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintlayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.recyclerviewVersion"
    implementation "androidx.multidex:multidex:$rootProject.ext.multidexVersion"
    implementation project(path: ':core')

}
static def buildTime() {
    return new Date().format("yyyy-MM-dd HH:mm", TimeZone.getTimeZone("GMT+8:00"))
}

static def hostName() {
    return "${System.getProperty("user.name")}@${InetAddress.localHost.hostName}"
}


def revision() {
    def code = new ByteArrayOutputStream()
//    exec {
//        commandLine 'git', 'rev-parse', '--short', 'HEAD'
//        standardOutput = code
//    }
    return code.toString()
}